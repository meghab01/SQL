//correlated subquery - inner feeds from outer
select first_name, last_name, salary, d.name from employees as e
join departments d
on e.department_id = d.id
where salary>
(select avg(salary)
 from employees
 where department_id = e.department_id)
 
 //coalesce replaces null with 0
 sum(coalesce (salary, 0))
 
 //date ops
 select * from projects
where start_date between '2011-07-01' and '2011-07-31'

select * from projects
where datediff(start_date, '2011-07-31')<0

//limit with offset (index starting 1) and total rows

  SELECT order_count FROM customer_order_counts ORDER BY order_count DESC LIMIT N-1, 1

// case statement

select 
case when d.name = "Engineering" then coalesce(e.first_name,'Fill') end as Eng,
case when d.name = "Marketing" then e.first_name end as Mark
from departments d 
join employees e
on d.id= e.department_id
where e.first_name is not null

// select in select, IF

select 
if (first_name='John',null, first_name) as FN,
DNAME, department_id from
(
select first_name,
(select name from departments where id = department_id) as DNAME,
department_id from employees
  ) as temp
//create table

create table tri(
  A int,
  B int,
  C int
  )
  
insert into tri values(
  20,20,23
  20,20,20
  20,21,22
  13,14,30
  )
  //identify type of triange
  # select 
# case 
#   when A=B and A=B and A=C then "Equilateral"
#   when A=B or B=C or A=C then "Isosceles"
#   when A<>B<>C then "Scalene"
#   when A+B "Not Triangle"
#   end as TRI_TYPE,
# A,B,C
# from tri
